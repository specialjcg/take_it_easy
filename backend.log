warning: unused import: `mcts_integration::process_mcts_move_only`
  --> src/services/game_service/mod.rs:22:9
   |
22 | pub use mcts_integration::process_mcts_move_only;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `scoring::*`
  --> src/lib.rs:75:9
   |
75 | pub use scoring::*;
   |         ^^^^^^^^^^

warning: variable does not need to be mutable
  --> src/neural/manager.rs:68:13
   |
68 |         let mut policy_net = PolicyNet::new(&vs_policy, config.input_dim);
   |             ----^^^^^^^^^^
   |             |
   |             help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
  --> src/neural/manager.rs:69:13
   |
69 |         let mut value_net = ValueNet::new(&vs_value, config.input_dim);
   |             ----^^^^^^^^^
   |             |
   |             help: remove this `mut`

warning: type `Plateau` is more private than the item `game_state::GameState::plateau`
 --> src/game/game_state.rs:7:5
  |
7 |     pub plateau: Plateau,
  |     ^^^^^^^^^^^^^^^^^^^^ field `game_state::GameState::plateau` is reachable at visibility `pub`
  |
note: but type `Plateau` is only usable at visibility `pub(crate)`
 --> src/game/plateau.rs:5:1
  |
5 | pub(crate) struct Plateau{
  | ^^^^^^^^^^^^^^^^^^^^^^^^^
  = note: `#[warn(private_interfaces)]` on by default

warning: type `Plateau` is more private than the item `is_plateau_full`
 --> src/game/plateau_is_full.rs:4:1
  |
4 | pub fn is_plateau_full(plateau: &Plateau) -> bool {
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function `is_plateau_full` is reachable at visibility `pub`
  |
note: but type `Plateau` is only usable at visibility `pub(crate)`
 --> src/game/plateau.rs:5:1
  |
5 | pub(crate) struct Plateau{
  | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type `Plateau` is more private than the item `get_legal_moves`
 --> src/game/get_legal_moves.rs:4:1
  |
4 | pub fn get_legal_moves(plateau: Plateau) -> Vec<usize> {
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function `get_legal_moves` is reachable at visibility `pub`
  |
note: but type `Plateau` is only usable at visibility `pub(crate)`
 --> src/game/plateau.rs:5:1
  |
5 | pub(crate) struct Plateau{
  | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type `Plateau` is more private than the item `simulate_games`
 --> src/game/simulate_game.rs:9:1
  |
9 | pub fn simulate_games(plateau: Plateau, deck: Deck) -> i32 {
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function `simulate_games` is reachable at visibility `pub`
  |
note: but type `Plateau` is only usable at visibility `pub(crate)`
 --> src/game/plateau.rs:5:1
  |
5 | pub(crate) struct Plateau{
  | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type `Plateau` is more private than the item `mcts_find_best_position_for_tile_with_nn`
  --> src/mcts/algorithm.rs:17:1
   |
17 | / pub fn mcts_find_best_position_for_tile_with_nn(
18 | |     plateau: &mut Plateau,
19 | |     deck: &mut Deck,
20 | |     chosen_tile: Tile,
...  |
25 | |     total_turns: usize,
26 | | ) -> MCTSResult {
   | |_______________^ function `mcts_find_best_position_for_tile_with_nn` is reachable at visibility `pub`
   |
note: but type `Plateau` is only usable at visibility `pub(crate)`
  --> src/game/plateau.rs:5:1
   |
5  | pub(crate) struct Plateau{
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type `Tile` is more private than the item `mcts_find_best_position_for_tile_with_nn`
  --> src/mcts/algorithm.rs:17:1
   |
17 | / pub fn mcts_find_best_position_for_tile_with_nn(
18 | |     plateau: &mut Plateau,
19 | |     deck: &mut Deck,
20 | |     chosen_tile: Tile,
...  |
25 | |     total_turns: usize,
26 | | ) -> MCTSResult {
   | |_______________^ function `mcts_find_best_position_for_tile_with_nn` is reachable at visibility `pub`
   |
note: but type `Tile` is only usable at visibility `pub(crate)`
  --> src/game/tile.rs:4:1
   |
4  | pub(crate) struct Tile(pub i32, pub i32, pub i32);
   | ^^^^^^^^^^^^^^^^^^^^^^

warning: type `Plateau` is more private than the item `convert_plateau_to_tensor`
  --> src/neural/tensor_conversion.rs:6:1
   |
6  | / pub fn convert_plateau_to_tensor(
7  | |     plateau: &Plateau,
8  | |     _tile: &Tile, // Add underscore prefix
9  | |     _deck: &Deck, // Add underscore prefix
10 | |     current_turn: usize,
11 | |     total_turns: usize,
12 | | ) -> Tensor {
   | |___________^ function `convert_plateau_to_tensor` is reachable at visibility `pub`
   |
note: but type `Plateau` is only usable at visibility `pub(crate)`
  --> src/game/plateau.rs:5:1
   |
5  | pub(crate) struct Plateau{
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type `Tile` is more private than the item `convert_plateau_to_tensor`
  --> src/neural/tensor_conversion.rs:6:1
   |
6  | / pub fn convert_plateau_to_tensor(
7  | |     plateau: &Plateau,
8  | |     _tile: &Tile, // Add underscore prefix
9  | |     _deck: &Deck, // Add underscore prefix
10 | |     current_turn: usize,
11 | |     total_turns: usize,
12 | | ) -> Tensor {
   | |___________^ function `convert_plateau_to_tensor` is reachable at visibility `pub`
   |
note: but type `Tile` is only usable at visibility `pub(crate)`
  --> src/game/tile.rs:4:1
   |
4  | pub(crate) struct Tile(pub i32, pub i32, pub i32);
   | ^^^^^^^^^^^^^^^^^^^^^^

warning: type `Plateau` is more private than the item `compute_alignment_score`
 --> src/scoring/scoring.rs:1:1
  |
1 | pub fn compute_alignment_score(plateau: &Plateau, position: usize, _tile: &Tile) -> f64 {
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function `compute_alignment_score` is reachable at visibility `pub`
  |
note: but type `Plateau` is only usable at visibility `pub(crate)`
 --> src/game/plateau.rs:5:1
  |
5 | pub(crate) struct Plateau{
  | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type `Tile` is more private than the item `compute_alignment_score`
 --> src/scoring/scoring.rs:1:1
  |
1 | pub fn compute_alignment_score(plateau: &Plateau, position: usize, _tile: &Tile) -> f64 {
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function `compute_alignment_score` is reachable at visibility `pub`
  |
note: but type `Tile` is only usable at visibility `pub(crate)`
 --> src/game/tile.rs:4:1
  |
4 | pub(crate) struct Tile(pub i32, pub i32, pub i32);
  | ^^^^^^^^^^^^^^^^^^^^^^

warning: type `Plateau` is more private than the item `result`
  --> src/scoring/scoring.rs:42:1
   |
42 | pub fn result(plateau: &Plateau) -> i32 {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function `result` is reachable at visibility `pub`
   |
note: but type `Plateau` is only usable at visibility `pub(crate)`
  --> src/game/plateau.rs:5:1
   |
5  | pub(crate) struct Plateau{
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type `Tile` is more private than the item `generate_tile_image_names`
 --> src/utils/image.rs:3:1
  |
3 | pub fn generate_tile_image_names(tiles: &[Tile]) -> Vec<String> {
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ function `generate_tile_image_names` is reachable at visibility `pub`
  |
note: but type `Tile` is only usable at visibility `pub(crate)`
 --> src/game/tile.rs:4:1
  |
4 | pub(crate) struct Tile(pub i32, pub i32, pub i32);
  | ^^^^^^^^^^^^^^^^^^^^^^

warning: function `calculate_final_scores` is never used
   --> src/services/game_manager.rs:308:8
    |
308 | pub fn calculate_final_scores(game_state: &TakeItEasyGameState) -> HashMap<String, i32> {
    |        ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: function `setup_logging` is never used
 --> src/logging.rs:3:8
  |
3 | pub fn setup_logging() {
  |        ^^^^^^^^^^^^^

warning: `take_it_easy` (lib) generated 18 warnings (run `cargo fix --lib -p take_it_easy` to apply 4 suggestions)
warning: unused imports: `NeuralComponents` and `NeuralSummary`
 --> src/neural/mod.rs:8:48
  |
8 | pub use manager::{NeuralManager, NeuralConfig, NeuralComponents, NeuralSummary};
  |                                                ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `mcts_integration::process_mcts_move_only`
  --> src/services/game_service/mod.rs:22:9
   |
22 | pub use mcts_integration::process_mcts_move_only;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/neural/manager.rs:54:12
    |
52  | impl NeuralManager {
    | ------------------ associated items in this implementation
53  |     /// Create a new neural network manager with default configuration
54  |     pub fn new() -> Result<Self, Box<dyn std::error::Error>> {
    |            ^^^
...
116 |     pub fn config(&self) -> &NeuralConfig {
    |            ^^^^^^
...
121 |     pub fn policy_net(&self) -> &PolicyNet {
    |            ^^^^^^^^^^
...
126 |     pub fn policy_net_mut(&mut self) -> &mut PolicyNet {
    |            ^^^^^^^^^^^^^^
...
131 |     pub fn value_net(&self) -> &ValueNet {
    |            ^^^^^^^^^
...
136 |     pub fn value_net_mut(&mut self) -> &mut ValueNet {
    |            ^^^^^^^^^^^^^
...
141 |     pub fn policy_varstore(&self) -> &nn::VarStore {
    |            ^^^^^^^^^^^^^^^
...
146 |     pub fn policy_varstore_mut(&mut self) -> &mut nn::VarStore {
    |            ^^^^^^^^^^^^^^^^^^^
...
151 |     pub fn value_varstore(&self) -> &nn::VarStore {
    |            ^^^^^^^^^^^^^^
...
156 |     pub fn value_varstore_mut(&mut self) -> &mut nn::VarStore {
    |            ^^^^^^^^^^^^^^^^^^
...
161 |     pub fn policy_optimizer(&self) -> &nn::Optimizer {
    |            ^^^^^^^^^^^^^^^^
...
166 |     pub fn policy_optimizer_mut(&mut self) -> &mut nn::Optimizer {
    |            ^^^^^^^^^^^^^^^^^^^^
...
171 |     pub fn value_optimizer(&self) -> &nn::Optimizer {
    |            ^^^^^^^^^^^^^^^
...
176 |     pub fn value_optimizer_mut(&mut self) -> &mut nn::Optimizer {
    |            ^^^^^^^^^^^^^^^^^^^
...
195 |     pub fn save_models(&self) -> Result<(), Box<dyn std::error::Error>> {
    |            ^^^^^^^^^^^
...
216 |     pub fn summary(&self) -> NeuralSummary {
    |            ^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: field `config` is never read
   --> src/neural/manager.rs:231:9
    |
230 | pub struct NeuralComponents {
    |            ---------------- field in this struct
231 |     pub config: NeuralConfig,
    |         ^^^^^^

warning: struct `NeuralSummary` is never constructed
   --> src/neural/manager.rs:242:12
    |
242 | pub struct NeuralSummary {
    |            ^^^^^^^^^^^^^

warning: function `calculate_final_scores` is never used
   --> src/services/game_manager.rs:308:8
    |
308 | pub fn calculate_final_scores(game_state: &TakeItEasyGameState) -> HashMap<String, i32> {
    |        ^^^^^^^^^^^^^^^^^^^^^^

warning: method `config` is never used
  --> src/servers/web_ui.rs:61:12
   |
55 | impl WebUiServer {
   | ---------------- method in this implementation
...
61 |     pub fn config(&self) -> &WebUiConfig {
   |            ^^^^^^

warning: method `config` is never used
   --> src/servers/grpc.rs:139:12
    |
116 | impl GrpcServer {
    | --------------- method in this implementation
...
139 |     pub fn config(&self) -> &GrpcConfig {
    |            ^^^^^^

warning: `take_it_easy` (bin "take_it_easy") generated 10 warnings (2 duplicates) (run `cargo fix --bin "take_it_easy"` to apply 2 suggestions)
    Finished `release` profile [optimized] target(s) in 0.13s
     Running `target/release/take_it_easy --single-player --num-simulations 300`
[2025-09-20 18:51:57.402737 +02:00] INFO [src/neural/manager.rs:60] 🧠 Initializing neural network manager...
[2025-09-20 18:51:57.624699 +02:00] INFO [src/neural/manager.rs:73] 📂 Loading neural network weights from model_weights
[2025-09-20 18:51:57.644766 +02:00] INFO [src/neural/manager.rs:79] ✅ PolicyNet loaded successfully
[2025-09-20 18:51:57.670866 +02:00] INFO [src/neural/manager.rs:86] ✅ ValueNet loaded successfully
[2025-09-20 18:51:57.670929 +02:00] INFO [src/neural/manager.rs:102] ✅ Neural network manager initialized successfully
[2025-09-20 18:51:57.671050 +02:00] INFO [src/servers/web_ui.rs:70] 🌐 Web UI server starting on http://localhost:51051
[2025-09-20 18:51:58.171832 +02:00] INFO [src/main.rs:162] 🎯 Interface web : http://localhost:51051
[2025-09-20 18:51:58.171980 +02:00] INFO [src/servers/grpc.rs:149] 🎮 Création session automatique single-player...
[2025-09-20 18:51:58.172092 +02:00] INFO [src/servers/grpc.rs:155] ✅ Session single-player créée: 7PEHQM
[2025-09-20 18:51:58.172162 +02:00] INFO [src/servers/grpc.rs:174] 🤖 MCTS ajouté à la session single-player 7PEHQM
[2025-09-20 18:51:58.172199 +02:00] INFO [src/servers/grpc.rs:208] 🤖 Mode SINGLE-PLAYER démarré : 1 joueur vs MCTS (300 simulations)
[2025-09-20 18:51:58.172241 +02:00] INFO [src/servers/grpc.rs:212] 🔗 gRPC server starting on 0.0.0.0:50051
[2025-09-20 18:52:04.873900 +02:00] ERROR [src/services/session_service.rs:464] ❌ GET_SESSION_STATE: Session f2ad34d0-84ce-4f17-a623-bdd1292552a8 introuvable
[2025-09-20 18:52:04.874111 +02:00] INFO [src/services/session_service.rs:476] 🔄 Mode single-player: redirection vers session 7PEHQM
[2025-09-20 18:52:13.760104 +02:00] INFO [src/services/session_service.rs:400] 🔄 Tentative JOIN_SESSION: code='AUTO', joueur='Joueur-ux5l'
[2025-09-20 18:52:13.760271 +02:00] INFO [src/services/session_service.rs:195] 🔄 AUTO: connexion à la session single-player 7PEHQM
[2025-09-20 18:52:13.760332 +02:00] INFO [src/services/session_service.rs:258] 🎯 Joueur Joueur-ux5l automatiquement prêt en mode single-player
[2025-09-20 18:52:13.760401 +02:00] INFO [src/services/game_manager.rs:130] 🎲 Tuile tirée: Tile(5, 6, 8) (tour 0)
[2025-09-20 18:52:13.760469 +02:00] INFO [src/services/session_service.rs:280] 🎮 Jeu ET premier tour automatiquement démarrés pour session 7PEHQM
[2025-09-20 18:52:13.760506 +02:00] INFO [src/services/session_service.rs:281] 🎲 Tuile proposée: Some(Tile(5, 6, 8))
[2025-09-20 18:52:22.890373 +02:00] ERROR [src/services/session_service.rs:464] ❌ GET_SESSION_STATE: Session f2ad34d0-84ce-4f17-a623-bdd1292552a8 introuvable
[2025-09-20 18:52:22.890482 +02:00] INFO [src/services/session_service.rs:476] 🔄 Mode single-player: redirection vers session 7PEHQM
[2025-09-20 18:52:25.482560 +02:00] INFO [src/services/game_manager.rs:287] 🔍 Tour 1/19, plateaux pleins: false
[2025-09-20 18:52:25.482597 +02:00] INFO [src/services/game_manager.rs:130] 🎲 Tuile tirée: Tile(9, 7, 3) (tour 1)
[2025-09-20 18:52:25.482662 +02:00] INFO [src/services/game_service/move_handler.rs:114] 🏆 Score mis à jour: 28f5aaec-8aff-4a94-a035-4516f2d34bea = 0 points
[2025-09-20 18:52:25.482671 +02:00] INFO [src/services/game_service/move_handler.rs:114] 🏆 Score mis à jour: mcts_ai = 0 points
[2025-09-20 18:52:31.648072 +02:00] INFO [src/services/game_manager.rs:287] 🔍 Tour 2/19, plateaux pleins: false
[2025-09-20 18:52:31.648139 +02:00] INFO [src/services/game_manager.rs:130] 🎲 Tuile tirée: Tile(1, 2, 4) (tour 2)
[2025-09-20 18:52:31.648174 +02:00] INFO [src/services/game_service/move_handler.rs:114] 🏆 Score mis à jour: 28f5aaec-8aff-4a94-a035-4516f2d34bea = 0 points
[2025-09-20 18:52:31.648188 +02:00] INFO [src/services/game_service/move_handler.rs:114] 🏆 Score mis à jour: mcts_ai = 0 points
[2025-09-20 18:52:49.910052 +02:00] ERROR [src/services/session_service.rs:464] ❌ GET_SESSION_STATE: Session f2ad34d0-84ce-4f17-a623-bdd1292552a8 introuvable
[2025-09-20 18:52:49.910188 +02:00] INFO [src/services/session_service.rs:476] 🔄 Mode single-player: redirection vers session 7PEHQM
[2025-09-20 18:53:03.107659 +02:00] INFO [src/services/game_manager.rs:287] 🔍 Tour 3/19, plateaux pleins: false
[2025-09-20 18:53:03.107844 +02:00] INFO [src/services/game_manager.rs:130] 🎲 Tuile tirée: Tile(5, 6, 3) (tour 3)
[2025-09-20 18:53:03.107954 +02:00] INFO [src/services/game_service/move_handler.rs:114] 🏆 Score mis à jour: mcts_ai = 0 points
[2025-09-20 18:53:03.108000 +02:00] INFO [src/services/game_service/move_handler.rs:114] 🏆 Score mis à jour: 28f5aaec-8aff-4a94-a035-4516f2d34bea = 0 points
